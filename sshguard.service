[Unit]
Description=%p
After=docker.service
Requires=docker.service

[Service]
TimeoutStartSec=0
Environment=IMAGE_NAME=quay.io/genevera/coreos-sshguard

ExecStartPre=-/usr/bin/docker kill %p
ExecStartPre=-/usr/bin/docker rm %p
ExecStartPre=/usr/bin/docker pull $IMAGE_NAME

# setup sshguard tables
ExecStartPre=-/usr/sbin/iptables -N sshguard
ExecStartPre=-/usr/sbin/ip6tables -N sshguard

# block abuser traffic
ExecStartPre=-/usr/sbin/iptables -D INPUT -j sshguard
ExecStartPre=-/usr/sbin/ip6tables -D INPUT -j sshguard
ExecStartPre=-/usr/sbin/iptables -A INPUT -j sshguard
ExecStartPre=-/usr/sbin/ip6tables -A INPUT -j sshguard

# because sshguard tries to verify pids inside log messages, and CoreOS
# uses inetd style sshd, we strip out the pid with sed so sshguard
# doesn't reject the log messages from the journal.
ExecStart=/bin/sh -c 'journalctl --no-pager -f -n0 -q -t sshd | /usr/bin/docker run -i --name=%n -v /dev/log:/dev/log --net=host --cap-add=NET_ADMIN --cap-add=NET_RAW quay.io/genevera/coreos-sshguard'

ExecStop=-/usr/bin/docker stop %p
ExecStop=-/usr/bin/docker rm %p

[X-Fleet]
Global=true
